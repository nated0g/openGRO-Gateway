version: '2'
volumes:
    node-red-data:
    influxdb-data:
    settings:
    grafana-data:
    telegraf-data:
    dnsmasq-conf:
services:
  influxdb:
    build: influxdb
    container_name: influxdb
    # privileged added so usb drive can be mounted.
    privileged: true
    volumes:
        # take care that the mount location "/mnt/influxdb" becomes overwritten
        # by the mount location specified in the influxdb Dockerfile.
        - 'influxdb-data:/mnt/influxdb'   
    ports:
      # The API for InfluxDB is served on port 8086
      - "8082:8082"
      - "8086:8086"
      # UDP Port
      - "8089:8089"
    restart: always
  telegraf:
    # Full tag list: https://hub.docker.com/r/library/telegraf/tags/
    build : telegraf
    pid: "host"
    network_mode: "host"
    privileged: true
    labels:
      io.resin.features.balena-socket: '1'
    depends_on:
      - influxdb
    restart: always
    environment:
       - interval=60s
       - flush_interval=60s
    volumes:
      - 'telegraf-data:/etc/telegraf'
  grafana:
    build: grafana 
    ports:
       - "3000:3000"
    depends_on:
       - influxdb
    restart: always
    volumes:
      - 'grafana-data:/var/lib/grafana'
  mqtt:
    image: panuwitp/mosquitto-arm
    ports:
      - "1883:1883"
  node-red:
    build: node-red
    volumes:
       - 'node-red-data:/data'
    ports:
       - "1880:1880"
    depends_on:
        - mqtt
    restart: always
    #network_mode: "host"
  nginx:
    build : nginx
    depends_on:
      - grafana
      - node-red
    ports:
       - "80:80"
       - "443:443"
    restart: always
  chisel:
    image: 'jpillora/chisel'
    restart: always
    network_mode: host
    environment:
      - RELAY_SERVER_IP
      - RELAY_SERVER_PORT
      - RELAY_SERVER_REMOTES
    entrypoint: ["sh", "-c", "/app/chisel client ${RELAY_SERVER_IP}:${RELAY_SERVER_PORT} ${RELAY_SERVER_REMOTES}"]
  # wifi-connect:
  #  build: ./wifi-connect
  #  network_mode: "host"
  #  labels:
  #    io.balena.features.dbus: '1'
  #  cap_add:
  #    - NET_ADMIN
  #  environment:
  #     DBUS_SYSTEM_BUS_ADDRESS: "unix:path=/host/run/dbus/system_bus_socket"
  browser:
    image: balenablocks/browser
    privileged: true # required for UDEV to find plugged in peripherals such as a USB mouse
    network_mode: host
    depends_on:
      - nginx
    ports:
        - '5011' # management API (optional)
        - '35173' # Chromium debugging port (optional)
    volumes:
      - 'settings:/data' # Only required if using PERSISTENT flag (see below)

#TODO Change to rpi-dhcpd?  or look into forking dnsmasq for arm64

  dnsmasq:
    image: outlyernet/dnsmasq-multiarch
    volumes:
      - 'dnsmasq-conf:/etc/dnsmasq.conf'
    ports:
      - '53:53/udp'
      - '5380:8080'